{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class ChessGame \{\
    \
\
    public Integer n;\
\
    public ChessGame(Integer n)\{\
        this.n = n;\
    \}\
\
    public  boolean safeToPut(String chessBoard[][], Integer row, Integer column) \{\
       \
        for (Integer i = 0; i < row; i++)\
            if (chessBoard[i][column] == 'x') \
                return false;\
\
      \
        for (Integer i = row, k = column; i >= 0 && k < n  ; i--, k++)\
            if (chessBoard[i][k] == 'x') \
                return false;\
\
        \
\
        for (Integer i = row, k = column; i >= 0 && k >= 0; i--, k--)\
            if (chessBoard[i][k] == 'x') \
                return false;\
\
        return true;\
    \}\
\
\
    public boolean nQueenRecursiveMethod(String chessBoard[][], Integer row) \{\
\
        if (row >= n) \
            return true;\
\
        for (Integer i = 0; i < n; i++) \{\
            if (safeToPut(chessBoard, row, i)) \{\
                \
            \
                chessBoard[row][i] = 'x';\
\
                if (nQueenRecursiveMethod(chessBoard, row + 1))\
                    return true;\
\
                chessBoard[row][i] = 'o';\
            \}\
\
        \}\
\
       \
\
        return false;\
\
    \}\
\
 \
\
    public void printMatrix(String chessBoard[][]) \{\
\
        for (Integer i = 0; i < chessBoard.length; i++) \{\
            for (Integer j = 0; j < chessBoard[i].length; j++) \{\
                System.debug(chessBoard[i][j] + ' ');\
            \}\
            System.debug();\
        \}\
    \}\
\
\
\
    public void createBoard(String board[][]) \{\
\
       \
        for (Integer i = 0; i < n; i++) \{\
            for (Integer j = 0; j < n; j++) \{\
                board[i][j] = 'o';\
            \}\
        \}\
\
    \}\
\
\}}